{
  "type": "excalidraw",
  "version": 2,
  "source": "https://excalidraw.com",
  "elements": [
    {
      "type": "text",
      "version": 38,
      "versionNonce": 1240657081,
      "isDeleted": false,
      "id": "i6W2cQ8esm-UOV-QNbXMC",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 427.1666920979817,
      "y": -331.7777099609375,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 283.65985107421875,
      "height": 25,
      "seed": 544311570,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1708154966263,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "BUILD OPEN AI CHAT BOT",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "BUILD OPEN AI CHAT BOT",
      "lineHeight": 1.25,
      "baseline": 18
    },
    {
      "type": "line",
      "version": 41,
      "versionNonce": 2021059342,
      "isDeleted": false,
      "id": "y_bOVQaC4bqAR8BpbU_Rq",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 0,
      "opacity": 100,
      "angle": 0,
      "x": 428.5071745339827,
      "y": -306.1861891087367,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 266.7275566440982,
      "height": 1.2792786168530483,
      "seed": 1291323474,
      "groupIds": [],
      "frameId": null,
      "roundness": {
        "type": 2
      },
      "boundElements": [],
      "updated": 1708095693769,
      "link": null,
      "locked": false,
      "startBinding": null,
      "endBinding": null,
      "lastCommittedPoint": null,
      "startArrowhead": null,
      "endArrowhead": null,
      "points": [
        [
          0,
          0
        ],
        [
          266.7275566440982,
          -1.2792786168530483
        ]
      ]
    },
    {
      "type": "text",
      "version": 242,
      "versionNonce": 881465175,
      "isDeleted": false,
      "id": "uXxMJHqdk6NfGDX60w_z4",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 0,
      "opacity": 100,
      "angle": 0,
      "x": 255.71259571327653,
      "y": -262.72690173540195,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 236.27980041503906,
      "height": 25,
      "seed": 145206094,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1708154966264,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "1. take input from user ",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "1. take input from user ",
      "lineHeight": 1.25,
      "baseline": 18
    },
    {
      "type": "text",
      "version": 160,
      "versionNonce": 1111944601,
      "isDeleted": false,
      "id": "Q5ryKYUQ16DOf235EIhhi",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 0,
      "opacity": 100,
      "angle": 0,
      "x": 253.45168253607056,
      "y": -232.60916298109956,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 761.2593994140625,
      "height": 25,
      "seed": 913265874,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1708154966264,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "2. Store the user's input in an array , add type safety checks for security.",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "2. Store the user's input in an array , add type safety checks for security.",
      "lineHeight": 1.25,
      "baseline": 18
    },
    {
      "type": "text",
      "version": 165,
      "versionNonce": 471536759,
      "isDeleted": false,
      "id": "Fo63MVuh6I9InOA1vi2mB",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 0,
      "opacity": 100,
      "angle": 0,
      "x": 249.01431583810478,
      "y": -195.14648420385709,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 747.7393798828125,
      "height": 50,
      "seed": 1402941134,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1708154966265,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": " 3. Make a variable and store the received messages in it, add role in the\n  message object ( 'system' | 'user' )",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": " 3. Make a variable and store the received messages in it, add role in the\n  message object ( 'system' | 'user' )",
      "lineHeight": 1.25,
      "baseline": 43
    },
    {
      "type": "text",
      "version": 338,
      "versionNonce": 371708537,
      "isDeleted": false,
      "id": "fXD8yxoj698TbDuwbKSY5",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 0,
      "opacity": 100,
      "angle": 0,
      "x": 262.8235309082161,
      "y": -131.0350393155053,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 964.459228515625,
      "height": 75,
      "seed": 1707389198,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1708154966265,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "4. Then we need to add a custom initial cmd prompt which we will be sent to provide context \nto our conversation and will enforce certain behavior in our responses.\nWe can do that by using unshift() method and adding that prompt in the user's message variable",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "4. Then we need to add a custom initial cmd prompt which we will be sent to provide context \nto our conversation and will enforce certain behavior in our responses.\nWe can do that by using unshift() method and adding that prompt in the user's message variable",
      "lineHeight": 1.25,
      "baseline": 68
    },
    {
      "type": "text",
      "version": 244,
      "versionNonce": 516910487,
      "isDeleted": false,
      "id": "BgzON9luO9e29A6t8aZ7j",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 0,
      "opacity": 100,
      "angle": 0,
      "x": 263.04262917642154,
      "y": -39.08788909141225,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 747.7880859375,
      "height": 49.56383637519764,
      "seed": 434866770,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1708154966267,
      "link": null,
      "locked": false,
      "fontSize": 19.825534550079055,
      "fontFamily": 1,
      "text": "5.Payload : This is an object which requires some values - like this. you can\nrefer to docs if you want to know what each property does in detail.",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "5.Payload : This is an object which requires some values - like this. you can\nrefer to docs if you want to know what each property does in detail.",
      "lineHeight": 1.25,
      "baseline": 42
    },
    {
      "type": "text",
      "version": 286,
      "versionNonce": 1899623438,
      "isDeleted": false,
      "id": "y5-giLVrEbWKgZE8ZJmwd",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 0,
      "opacity": 100,
      "angle": 0,
      "x": 241.8282159014439,
      "y": 22.955490745671,
      "strokeColor": "#1971c2",
      "backgroundColor": "transparent",
      "width": 821.279296875,
      "height": 190.80908912605418,
      "seed": 517887246,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1708095693769,
      "link": null,
      "locked": false,
      "fontSize": 14.455234024701072,
      "fontFamily": 3,
      "text": "```const payload = {\n        model:'gpt-3.5-turbo',                 //model which version og chatgpt you want to use\n        messages:outBoundMessages,          //list of messages\n        tempaerature:0.4,                   //define s the levels of creativeness in the response\n        frequency_penalty:0,                //how frequent the same word can appear,\n        presence_penalty:0,\n        max_tokens:150,                         //no of max words in a single response\n        stream:true,\n        n:1\n    }\n```",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "```const payload = {\n        model:'gpt-3.5-turbo',                 //model which version og chatgpt you want to use\n        messages:outBoundMessages,          //list of messages\n        tempaerature:0.4,                   //define s the levels of creativeness in the response\n        frequency_penalty:0,                //how frequent the same word can appear,\n        presence_penalty:0,\n        max_tokens:150,                         //no of max words in a single response\n        stream:true,\n        n:1\n    }\n```",
      "lineHeight": 1.2,
      "baseline": 187
    },
    {
      "type": "text",
      "version": 541,
      "versionNonce": 173611865,
      "isDeleted": false,
      "id": "T66JjiZlDdVIr3vXTmyoX",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 0,
      "opacity": 100,
      "angle": 0,
      "x": 277.34972130948086,
      "y": 228.79014041581888,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 867.91943359375,
      "height": 150,
      "seed": 382207570,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1708154966274,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "6. Make a function in the api which will take payload variable as a parameter\n\n7. in that function, we need to start send API request to             or to this \nurl (https://api.openai.com/v1/chat/completions) and add your secret KEY in the headers\n+ send the payload in the body received through the reqt object.\n",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "6. Make a function in the api which will take payload variable as a parameter\n\n7. in that function, we need to start send API request to             or to this \nurl (https://api.openai.com/v1/chat/completions) and add your secret KEY in the headers\n+ send the payload in the body received through the reqt object.\n",
      "lineHeight": 1.25,
      "baseline": 143
    },
    {
      "type": "text",
      "version": 45,
      "versionNonce": 937140919,
      "isDeleted": false,
      "id": "v_RYYQsFp54IKukC9RFAu",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 0,
      "opacity": 100,
      "angle": 0,
      "x": 874.0898097467192,
      "y": 281.29562637078993,
      "strokeColor": "#2f9e44",
      "backgroundColor": "transparent",
      "width": 104.49990844726562,
      "height": 25,
      "seed": 382495570,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1708154966275,
      "link": "https://platform.openai.com/docs/overview",
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "openAI.com",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "openAI.com",
      "lineHeight": 1.25,
      "baseline": 18
    },
    {
      "type": "text",
      "version": 424,
      "versionNonce": 2133739577,
      "isDeleted": false,
      "id": "JCGb2ZnGlhx_KCbvJP2rj",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 0,
      "opacity": 100,
      "angle": 0,
      "x": 267.84632346507925,
      "y": 378.02876754679176,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 986.919189453125,
      "height": 125,
      "seed": 1185969422,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1708154966275,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": " 8.After that, we need to create a new Readable stream , make an async start function i\ninside it with parameter controller. create another function inside start Function lets say onParse,\nwhich will have parameter event (the type of event is ParsedEvent | ReconnectInterval [you can\nget these specific events from 'event-source parser npm package.'] ),\n ",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": " 8.After that, we need to create a new Readable stream , make an async start function i\ninside it with parameter controller. create another function inside start Function lets say onParse,\nwhich will have parameter event (the type of event is ParsedEvent | ReconnectInterval [you can\nget these specific events from 'event-source parser npm package.'] ),\n ",
      "lineHeight": 1.25,
      "baseline": 118
    },
    {
      "type": "text",
      "version": 377,
      "versionNonce": 132395991,
      "isDeleted": false,
      "id": "2n5O9wLYoRuDsHFBpTvqi",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 0,
      "opacity": 100,
      "angle": 0,
      "x": 268.58476683889177,
      "y": 497.6529772665132,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 934.6192626953125,
      "height": 100,
      "seed": 433033490,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1708154966276,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "9. make a constant variable there and save data extracted from event inside that variable.\nif event ==='[DONE]' then close the controller & return;\n  \n",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "9. make a constant variable there and save data extracted from event inside that variable.\nif event ==='[DONE]' then close the controller & return;\n  \n",
      "lineHeight": 1.25,
      "baseline": 93
    },
    {
      "type": "text",
      "version": 305,
      "versionNonce": 2123028761,
      "isDeleted": false,
      "id": "awlORdU1K797gvj1K8M6N",
      "fillStyle": "solid",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 0,
      "opacity": 100,
      "angle": 0,
      "x": 269.29256042341217,
      "y": 573.5599592383369,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "width": 989.8993530273438,
      "height": 75,
      "seed": 1996632658,
      "groupIds": [],
      "frameId": null,
      "roundness": null,
      "boundElements": [],
      "updated": 1708154966276,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "10.  Parse and Save the data in a constant variable ,for instance lets say const ParsedData  , \nthen we can access the Response message like this-\nParsedData.choices[0].message.content;  ",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "10.  Parse and Save the data in a constant variable ,for instance lets say const ParsedData  , \nthen we can access the Response message like this-\nParsedData.choices[0].message.content;  ",
      "lineHeight": 1.25,
      "baseline": 68
    }
  ],
  "appState": {
    "gridSize": null,
    "viewBackgroundColor": "#ffffff"
  },
  "files": {}
}